% %% Resume training a network
clc;
clear;
[filename, pathname] = uigetfile('*.mat','Which file to resume from layers checkpoint?',...
                        '/work/bioinformatics/shared/dope/torch/test/217x217/segmented/netTEMP/');
load(fullfile(pathname,filename));

[filename, pathname] = uigetfile('*.mat','Which training set to use?',...
                       '/work/bioinformatics/shared/dope/torch/test/217x217/segmented/');
load(fullfile(pathname,filename));

%% Define Checkpoint
[checkPointDir] = uigetdir('/work/bioinformatics/shared/dope/torch/test/217x217/segmented/netTEMP',...
                            'Where to store net Checkpoints?');

if ~verLessThan('matlab', '9.3')

    options = trainingOptions('sgdm',...
        'MaxEpochs',100000, ...
        'ValidationFrequency',30,...
        'MiniBatchSize',100,...
        'Verbose',false,...
        'Plots','training-progress',...
        'ValidationData',imdsValid,...
        'ValidationPatience', Inf,...
        'CheckpointPath',checkPointDir);%fullfile(dataRootDir,'netTEMP'));
else
    
   %     2017a
    options = trainingOptions('sgdm','LearnRateSchedule','piecewise',...
          'LearnRateDropFactor',0.2,'LearnRateDropPeriod',5,... 
          'MaxEpochs',1000,'MiniBatchSize',75,...
          'CheckpointPath',checkPointDir);         
end


trainedNet = trainNetwork(imdsTrain,net.Layers,options);
