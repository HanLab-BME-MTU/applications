% Preparing synthetic bead images

% reference image (500x500)
% reference image (300x200)
xmax=500;
ymax=500;
nPoints = 8000;
bead_r = 60; % nm
pixSize = 108; % nm/pix 60x
sigma = 2*bead_r/pixSize;
[refimg,bead_x, bead_y, sv, Av] = simGaussianBeads(xmax,ymax, sigma, ...
    'npoints', nPoints, 'Border', 'truncated');

% bead images
% displacement field
E=8000;  %Young's modulus, unit: Pa
meshPtsFwdSol=2^10;
forceType = 'groupForce';

imScale = 10; %magnification from 50x50
gridSpacing = 1;
xmin = gridSpacing;
ymin = gridSpacing;

[x_mat_u, y_mat_u]=meshgrid(xmin:gridSpacing:xmax,ymin:gridSpacing:ymax);

% % temporary - get the coordinates
% figure, imshow(ones(500))
% hold on
% fposxy = [];
% n = 0;
% % Loop, picking up the points.
% disp('Left mouse button picks points.')
% disp('Right mouse button picks last point.')
% but = 1;
% while but == 1
%     [xi,yi,but] = ginput(1);
%     plot(xi,yi,'ro')
%     n = n+1;
%     text(xi,yi-8,num2str(n));
%     fposxy(n,:) = [xi yi];
% end
% hold off

posNA = [139.0000  267.0000
  156.0000  232.0000
  184.0000  212.0000
  217.0000  200.0000
  246.0000  195.0000
  272.0000  199.0000
  297.0000  211.0000
  323.0000  231.0000
  346.0000  266.0000];
% focal adhesion
% % temporary - get the coordinates
% figure, imshow(ones(500))
% hold on
% plot(posNA(:,1),posNA(:,2),'bo')
% fposxy = [];
% n = 0;
% % Loop, picking up the points.
% disp('Left mouse button picks points.')
% disp('Right mouse button picks last point.')
% but = 1;
% while but == 1
%     [xi,yi,but] = ginput(1);
%     plot(xi,yi,'ro')
%     n = n+1;
%     text(xi,yi-8,num2str(n));
%     fposxy(n,:) = [xi yi];
% end
% hold off
posFA = [   42.0000  323.0000
   54.0000  319.0000
   96.0000  298.0000
  139.0000  288.0000
  180.0000  280.0000
  225.0000  276.0000
  263.0000  273.0000
  301.0000  275.0000
  331.0000  281.0000
  347.0000  279.0000
  381.0000  290.0000
  417.0000  303.0000
  455.0000  317.0000
   69.0000  359.0000
   91.0000  349.0000
  115.0000  337.0000
  129.0000  338.0000
  168.0000  327.0000
  186.0000  321.0000
  270.0000  318.0000
  288.0000  320.0000
  312.0000  323.0000
  361.0000  330.0000
  383.0000  337.0000
  423.0000  352.0000
  432.0000  363.0000];

[ux, uy]=fwdSolution(x_mat_u,y_mat_u,E,xmin,xmax,ymin,ymax,...
    @(x,y) assumedForceAniso2D(1,x,y,139,267,150,420,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x,y,156,232,110,450,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x,y,184,212,60,500,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x,y,217,200,20,520,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x,y,246,195,0,550,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x,y,272,199,-30,510,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x,y,297,211,-75,495,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x,y,323,231,-100,440,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x,y,346,266,-140,400,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x,y,42,323,480,1600,400/108,2000/108,forceType)+...
    assumedForceAniso2D(1,x,y,54,319,400,1660,400/108,2100/108,forceType)+...
    assumedForceAniso2D(1,x,y,96,298,320,1720,400/108,2000/108,forceType)+...
    assumedForceAniso2D(1,x,y,139,288,240,1780,400/108,2300/108,forceType)+...
    assumedForceAniso2D(1,x,y,180,280,160,1840,400/108,2000/108,forceType)+...
    assumedForceAniso2D(1,x,y,225,276,80,1900,400/108,2400/108,forceType)+...
    assumedForceAniso2D(1,x,y,263,273,0,2000,400/108,2300/108,forceType)+...
    assumedForceAniso2D(1,x,y,301,275,-80,1900,400/108,2600/108,forceType)+...
    assumedForceAniso2D(1,x,y,331,281,-160,1840,400/108,2200/108,forceType)+...
    assumedForceAniso2D(1,x,y,347,279,-240,1780,400/108,2000/108,forceType)+...
    assumedForceAniso2D(1,x,y,381,290,-320,1720,400/108,2700/108,forceType)+...
    assumedForceAniso2D(1,x,y,417,303,-400,1660,400/108,2300/108,forceType)+...
    assumedForceAniso2D(1,x,y,455,317,-480,1600,400/108,2100/108,forceType)+...
    assumedForceAniso2D(1,x,y,69,359,600,2500,600/108,3000/108,forceType)+...
    assumedForceAniso2D(1,x,y,91,349,500,2600,600/108,2600/108,forceType)+...
    assumedForceAniso2D(1,x,y,115,337,400,2700,600/108,3500/108,forceType)+...
    assumedForceAniso2D(1,x,y,129,338,300,2800,600/108,3000/108,forceType)+...
    assumedForceAniso2D(1,x,y,168,327,200,2900,600/108,2600/108,forceType)+...
    assumedForceAniso2D(1,x,y,186,321,100,3000,600/108,3000/108,forceType)+...
    assumedForceAniso2D(1,x,y,270,318,0,3100,600/108,3500/108,forceType)+...
    assumedForceAniso2D(1,x,y,288,320,-100,3000,600/108,2600/108,forceType)+...
    assumedForceAniso2D(1,x,y,312,323,-200,2900,600/108,3000/108,forceType)+...
    assumedForceAniso2D(1,x,y,361,330,-300,2800,600/108,2600/108,forceType)+...
    assumedForceAniso2D(1,x,y,383,337,-400,2700,600/108,3500/108,forceType)+...
    assumedForceAniso2D(1,x,y,423,352,-500,2600,600/108,3000/108,forceType)+...
    assumedForceAniso2D(1,x,y,432,363,-600,2500,600/108,2600/108,forceType),...
    @(x,y) assumedForceAniso2D(2,x,y,139,267,150,420,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x,y,156,232,110,450,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x,y,184,212,60,500,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x,y,217,200,20,520,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x,y,246,195,0,550,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x,y,272,199,-30,510,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x,y,297,211,-75,495,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x,y,323,231,-100,440,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x,y,346,266,-140,400,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x,y,42,323,480,1600,400/108,2000/108,forceType)+...
    assumedForceAniso2D(2,x,y,54,319,400,1660,400/108,2100/108,forceType)+...
    assumedForceAniso2D(2,x,y,96,298,320,1720,400/108,2000/108,forceType)+...
    assumedForceAniso2D(2,x,y,139,288,240,1780,400/108,2300/108,forceType)+...
    assumedForceAniso2D(2,x,y,180,280,160,1840,400/108,2000/108,forceType)+...
    assumedForceAniso2D(2,x,y,225,276,80,1900,400/108,2400/108,forceType)+...
    assumedForceAniso2D(2,x,y,263,273,0,2000,400/108,2300/108,forceType)+...
    assumedForceAniso2D(2,x,y,301,275,-80,1900,400/108,2600/108,forceType)+...
    assumedForceAniso2D(2,x,y,331,281,-160,1840,400/108,2200/108,forceType)+...
    assumedForceAniso2D(2,x,y,347,279,-240,1780,400/108,2000/108,forceType)+...
    assumedForceAniso2D(2,x,y,381,290,-320,1720,400/108,2700/108,forceType)+...
    assumedForceAniso2D(2,x,y,417,303,-400,1660,400/108,2300/108,forceType)+...
    assumedForceAniso2D(2,x,y,455,317,-480,1600,400/108,2100/108,forceType)+...
    assumedForceAniso2D(2,x,y,69,359,600,2500,600/108,3000/108,forceType)+...
    assumedForceAniso2D(2,x,y,91,349,500,2600,600/108,2600/108,forceType)+...
    assumedForceAniso2D(2,x,y,115,337,400,2700,600/108,3500/108,forceType)+...
    assumedForceAniso2D(2,x,y,129,338,300,2800,600/108,3000/108,forceType)+...
    assumedForceAniso2D(2,x,y,168,327,200,2900,600/108,2600/108,forceType)+...
    assumedForceAniso2D(2,x,y,186,321,100,3000,600/108,3000/108,forceType)+...
    assumedForceAniso2D(2,x,y,270,318,0,3100,600/108,3500/108,forceType)+...
    assumedForceAniso2D(2,x,y,288,320,-100,3000,600/108,2600/108,forceType)+...
    assumedForceAniso2D(2,x,y,312,323,-200,2900,600/108,3000/108,forceType)+...
    assumedForceAniso2D(2,x,y,361,330,-300,2800,600/108,2600/108,forceType)+...
    assumedForceAniso2D(2,x,y,383,337,-400,2700,600/108,3500/108,forceType)+...
    assumedForceAniso2D(2,x,y,423,352,-500,2600,600/108,3000/108,forceType)+...
    assumedForceAniso2D(2,x,y,432,363,-600,2500,600/108,2600/108,forceType),'fft',[],meshPtsFwdSol,32/pixelSize); %,'conv',[],meshPtsFwdSol);

% finding displacement at bead location
bead_ux = zeros(size(bead_x));
bead_uy = zeros(size(bead_y));
for k=1:nPoints
    [~,indcol_closest_x] = min(abs(x_mat_u(1,:)-bead_x(k)),[],2);
    [~,indrow_closest_y] = min(abs(y_mat_u(:,1)-bead_y(k)),[],1);
    row_bottom = max(1,indrow_closest_y-2);
    row_top = min(size(x_mat_u,2),indrow_closest_y+2);
    col_bottom = max(1,indcol_closest_x-2);
    col_top = min(size(y_mat_u,1),indcol_closest_x+2);
    loc_xmat = x_mat_u(row_bottom:row_top,col_bottom:col_top);
    loc_ymat = y_mat_u(row_bottom:row_top,col_bottom:col_top);
    loc_ux = ux(row_bottom:row_top,col_bottom:col_top);
    loc_uy = uy(row_bottom:row_top,col_bottom:col_top);
    bead_ux(k) = interp2(loc_xmat,loc_ymat,loc_ux,bead_x(k),bead_y(k));
    if isnan(bead_ux(k))
        bead_ux(k) = ux(indrow_closest_y,indcol_closest_x);
    end
    bead_uy(k) = interp2(loc_xmat,loc_ymat,loc_uy,bead_x(k),bead_y(k));
    if isnan(bead_uy(k))
        bead_uy(k) = uy(indrow_closest_y,indcol_closest_x);
    end
end

pixelSize = 0.108; % assuming 60x objective um/pixel
bead_ux_pix = bead_ux/(pixelSize^2);
bead_uy_pix = bead_uy/(pixelSize^2);
beadimgwithMargin = simGaussianSpots(500,500, 2,'x',bead_x+bead_ux_pix,'y',bead_y+bead_uy_pix,'A',Av, 'Border', 'padded','Normalization','analytical');

% beadimgwithMargin_debug = simGaussianSpots(500,500, 2,'x',bead_x,'y',bead_y,'A',Av, 'Border', 'truncated','Normalization','analytical');

beadimg = beadimgwithMargin(51:450,51:450); %cropping in the middle
beadimg = uint16(beadimg*2^14/max(max(beadimg)));
imwrite(beadimg,'beadimg.tif')


% ------------------------ original force

force_x = assumedForceAniso2D(1,x_mat_u,y_mat_u,139,267,150,420,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,156,232,110,450,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,184,212,60,500,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,217,200,20,520,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,246,195,0,550,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,272,199,-30,510,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,297,211,-75,495,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,323,231,-100,440,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,346,266,-140,400,200/108,300/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,42,323,480,1600,400/108,2000/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,54,319,400,1660,400/108,2100/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,96,298,320,1720,400/108,2000/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,139,288,240,1780,400/108,2300/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,180,280,160,1840,400/108,2000/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,225,276,80,1900,400/108,2400/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,263,273,0,2000,400/108,2300/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,301,275,-80,1900,400/108,2600/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,331,281,-160,1840,400/108,2200/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,347,279,-240,1780,400/108,2000/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,381,290,-320,1720,400/108,2700/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,417,303,-400,1660,400/108,2300/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,455,317,-480,1600,400/108,2100/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,69,359,600,2500,600/108,3000/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,91,349,500,2600,600/108,2600/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,115,337,400,2700,600/108,3500/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,129,338,300,2800,600/108,3000/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,168,327,200,2900,600/108,2600/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,186,321,100,3000,600/108,3000/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,270,318,0,3100,600/108,3500/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,288,320,-100,3000,600/108,2600/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,312,323,-200,2900,600/108,3000/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,361,330,-300,2800,600/108,2600/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,383,337,-400,2700,600/108,3500/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,423,352,-500,2600,600/108,3000/108,forceType)+...
    assumedForceAniso2D(1,x_mat_u,y_mat_u,432,363,-600,2500,600/108,2600/108,forceType);
force_y = assumedForceAniso2D(2,x_mat_u,y_mat_u,139,267,150,420,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,156,232,110,450,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,184,212,60,500,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,217,200,20,520,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,246,195,0,550,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,272,199,-30,510,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,297,211,-75,495,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,323,231,-100,440,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,346,266,-140,400,200/108,300/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,42,323,480,1600,400/108,2000/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,54,319,400,1660,400/108,2100/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,96,298,320,1720,400/108,2000/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,139,288,240,1780,400/108,2300/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,180,280,160,1840,400/108,2000/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,225,276,80,1900,400/108,2400/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,263,273,0,2000,400/108,2300/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,301,275,-80,1900,400/108,2600/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,331,281,-160,1840,400/108,2200/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,347,279,-240,1780,400/108,2000/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,381,290,-320,1720,400/108,2700/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,417,303,-400,1660,400/108,2300/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,455,317,-480,1600,400/108,2100/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,69,359,600,2500,600/108,3000/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,91,349,500,2600,600/108,2600/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,115,337,400,2700,600/108,3500/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,129,338,300,2800,600/108,3000/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,168,327,200,2900,600/108,2600/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,186,321,100,3000,600/108,3000/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,270,318,0,3100,600/108,3500/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,288,320,-100,3000,600/108,2600/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,312,323,-200,2900,600/108,3000/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,361,330,-300,2800,600/108,2600/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,383,337,-400,2700,600/108,3500/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,423,352,-500,2600,600/108,3000/108,forceType)+...
    assumedForceAniso2D(2,x_mat_u,y_mat_u,432,363,-600,2500,600/108,2600/108,forceType);
%-------------------------------------------

% run the TFM Package and obtain displacement field and force field

%--------------------------------------------

% load the displacement field
load('/files/.retain-snapshots.d7d-w0d/LCCB/fsm/harvard/analysis/Sangyoon/Bead-tracking/TFMPackage/displacementField21/displField.mat')
displField21 = displField;
% compare it with original ones
h1 = figure; quiver(bead_x,bead_y,bead_ux_pix,bead_uy_pix,0,'r');
hold on
quiver(displField21.pos(:,1)+50,displField21.pos(:,2)+50,displField21.vec(:,1),displField21.vec(:,2),0,'k','Linewidth',1)
xlim([80 420])
ylim([80 420])
hleg = legend('Original','Measured 21x21',...
              'Location','NorthEast');
set(hleg,'FontAngle','italic','TextColor',[.3,.2,.1],'Fontsize',6)
% scale vector 1 um
quiver(400,85,1/pixelSize,0,0,'k','Linewidth',2)
print(h1,'displacement21.eps','-depsc')
hgexport(h1,'displacement21',hgexport('factorystyle'),'Format','tiff')
hgsave(h1,'displacement21','-v7.3')

% zoomed displacement field
h2 = figure; quiver(bead_x,bead_y,bead_ux_pix,bead_uy_pix,0,'r');
hold on
quiver(displField21.pos(:,1)+50,displField21.pos(:,2)+50,displField21.vec(:,1),displField21.vec(:,2),0,'k','Linewidth',1)
xlim([115 165])
ylim([145 195])
hleg = legend('Original','Measured 21x21',...
              'Location','NorthEast');
set(hleg,'FontAngle','italic','TextColor',[.3,.2,.1],'Fontsize',6)
% scale vector 1 um
quiver(155,148,1/pixelSize,0,0,'k','Linewidth',2)
print(h2,'displacement21z.eps','-depsc')
hgexport(h2,'displacement21z',hgexport('factorystyle'),'Format','tiff')
hgsave(h2,'displacement21z','-v7.3')

% load the force field
load('/files/.retain-snapshots.d7d-w0d/LCCB/fsm/harvard/analysis/Sangyoon/Bead-tracking/TFMPackage/forceField21L2/forceField.mat')
forceField21 = forceField;
% compare it with original ones
% subsampling the original force
x_mat = x_mat_u(1:50:end,1:50:end);
y_mat = y_mat_u(1:50:end,1:50:end);
force_xmat = force_x(1:50:end,1:50:end);
force_ymat = force_y(1:50:end,1:50:end);
forceScale=.02*sqrt(max(max(force_x.^2+force_y.^2)));

% force plot for 21x21
h3=figure; quiver(x_mat,y_mat,force_xmat/forceScale,force_ymat/forceScale,0,'b')
hold on
% quiver(forceField21.pos(:,1)+50,forceField21.pos(:,2)+50,forceField21.vec(:,1)/forceScale,forceField21.vec(:,2)/forceScale,0,'r')
quiver(forceField21.pos(:,1)+50,forceField21.pos(:,2)+50,forceField21.vec(:,1)/forceScale,forceField21.vec(:,2)/forceScale,0,'r')
xlim([80 420])
ylim([80 420])
hleg = legend('Original','L2 21x21',...
              'Location','NorthEast');
set(hleg,'FontAngle','italic','TextColor',[.3,.2,.1],'Fontsize',6)
% scale vector 1 kPa
quiver(380,90,1000/forceScale,0,0,'k','Linewidth',2)
print(h3,'forceField21.eps','-depsc')
hgexport(h3,'forceField21',hgexport('factorystyle'),'Format','tiff')
hgsave(h3,'forceField21','-v7.3')

%------------------
% Run TFMPackage with one-norm regularization
%------------------------
% force reconstruction with L1norm based regularization for 21x21
% load the force field
load('/files/.retain-snapshots.d7d-w0d/LCCB/fsm/harvard/analysis/Sangyoon/Bead-tracking/TFMPackage/forceField21L1/forceField.mat')
forceField21L1 = forceField;
% force plot for 21x21 L1
h4=figure; quiver(x_mat,y_mat,force_xmat/forceScale,force_ymat/forceScale,0,'b')
hold on
quiver(forceField21L1.pos(:,1)+50,forceField21L1.pos(:,2)+50,forceField21L1.vec(:,1)/forceScale,forceField21L1.vec(:,2)/forceScale,0,'r')
xlim([80 420])
ylim([80 420])
hleg = legend('Original','L1 21x21',...
              'Location','NorthEast');
set(hleg,'FontAngle','italic','TextColor',[.3,.2,.1],'Fontsize',6)
% scale vector 1 kPa
quiver(380,90,1000/forceScale,0,0,'k','Linewidth',2)
print(h4,'forceField21L1.eps','-depsc')
hgexport(h4,'forceField21L1',hgexport('factorystyle'),'Format','tiff')
hgsave(h4,'forceField21L1','-v7.3')


%-------------------------------------------

% run the TFM Package with 11x11

%--------------------------------------------

% load the displacement field
load('/files/.retain-snapshots.d7d-w0d/LCCB/fsm/harvard/analysis/Sangyoon/Bead-tracking/TFMPackage/displacementField11/displField.mat')
displField21 = displField;
% compare it with original ones
h1 = figure; quiver(bead_x,bead_y,bead_ux_pix,bead_uy_pix,0,'r');
hold on
quiver(displField21.pos(:,1)+50,displField21.pos(:,2)+50,displField21.vec(:,1),displField21.vec(:,2),0,'k','Linewidth',1)
xlim([80 420])
ylim([80 420])
hleg = legend('Original','Measured 21x21',...
              'Location','NorthEast');
set(hleg,'FontAngle','italic','TextColor',[.3,.2,.1],'Fontsize',6)
% scale vector 1 um
quiver(400,85,1/pixelSize,0,0,'k','Linewidth',2)
print(h1,'displacement11.eps','-depsc')
hgexport(h1,'displacement11',hgexport('factorystyle'),'Format','tiff')
hgsave(h1,'displacement11','-v7.3')

% zoomed displacement field
h2 = figure; quiver(bead_x,bead_y,bead_ux_pix,bead_uy_pix,0,'r');
hold on
quiver(displField21.pos(:,1)+50,displField21.pos(:,2)+50,displField21.vec(:,1),displField21.vec(:,2),0,'k','Linewidth',1)
xlim([115 165])
ylim([145 195])
hleg = legend('Original','Measured 21x21',...
              'Location','NorthEast');
set(hleg,'FontAngle','italic','TextColor',[.3,.2,.1],'Fontsize',6)
% scale vector 1 um
quiver(155,148,1/pixelSize,0,0,'k','Linewidth',2)
print(h2,'displacement11z.eps','-depsc')
hgexport(h2,'displacement11z',hgexport('factorystyle'),'Format','tiff')
hgsave(h2,'displacement11z','-v7.3')

% load the force field
load('/files/.retain-snapshots.d7d-w0d/LCCB/fsm/harvard/analysis/Sangyoon/Bead-tracking/TFMPackage/forceField11L2/forceField.mat')
forceField21 = forceField;

% force plot for 11x11
h3=figure; quiver(x_mat,y_mat,force_xmat/forceScale,force_ymat/forceScale,0,'b')
hold on
% quiver(forceField21.pos(:,1)+50,forceField21.pos(:,2)+50,forceField21.vec(:,1)/forceScale,forceField21.vec(:,2)/forceScale,0,'r')
quiver(forceField21.pos(:,1)+50,forceField21.pos(:,2)+50,forceField21.vec(:,1)/forceScale,forceField21.vec(:,2)/forceScale,0,'r')
xlim([80 420])
ylim([80 420])
hleg = legend('Original','L2 21x21',...
              'Location','NorthEast');
set(hleg,'FontAngle','italic','TextColor',[.3,.2,.1],'Fontsize',6)
% scale vector 1 kPa
quiver(380,90,1000/forceScale,0,0,'k','Linewidth',2)
print(h3,'forceField11L2.eps','-depsc')
hgexport(h3,'forceField11L2',hgexport('factorystyle'),'Format','tiff')
hgsave(h3,'forceField11L2','-v7.3')

%------------------
% Run TFMPackage with one-norm regularization
%------------------------
% force reconstruction with L1norm based regularization for 21x21
% load the force field
load('/files/.retain-snapshots.d7d-w0d/LCCB/fsm/harvard/analysis/Sangyoon/Bead-tracking/TFMPackage/forceField11L1/forceField.mat')
forceField21L1 = forceField;
% force plot for 21x21 L1
h4=figure; quiver(x_mat,y_mat,force_xmat/forceScale,force_ymat/forceScale,0,'b')
hold on
quiver(forceField21L1.pos(:,1)+50,forceField21L1.pos(:,2)+50,forceField21L1.vec(:,1)/forceScale,forceField21L1.vec(:,2)/forceScale,0,'r')
xlim([80 420])
ylim([80 420])
hleg = legend('Original','L1 21x21',...
              'Location','NorthEast');
set(hleg,'FontAngle','italic','TextColor',[.3,.2,.1],'Fontsize',6)
% scale vector 1 kPa
quiver(380,90,1000/forceScale,0,0,'k','Linewidth',2)
print(h4,'forceField11L1.eps','-depsc')
hgexport(h4,'forceField11L1',hgexport('factorystyle'),'Format','tiff')
hgsave(h4,'forceField11L1','-v7.3')






















% figure making
imwrite(refimg,'refImg.tif')
imwrite(beadimg,'beadimg.tif')
figure,quiver(displField21.pos(:,1)+50,displField21.pos(:,2)+50,displField21.vec(:,1),displField21.vec(:,2),0,'r')
hold on
% show quiver(bead_x,bead_y,bead_ux_pix,bead_uy_pix,0,'b')


%---------------------------------------------------------------------------------
%Run force reconstruction without using TFM Package
display('creating fine mesh and basis function (1x1)')
[x_mat_d, y_mat_d]=meshgrid(1:1:500, 1:1:500);
x_vec_d=reshape(x_mat_d,[],1);
y_vec_d=reshape(y_mat_d,[],1); % fine mesh for original force

[ux_d, uy_d]=fwdSolution(x_mat_d,y_mat_d,E,1,500,1,500,...
    @(x,y) assumedForceAniso2D(1,x,y,(10+3)*imScale,(10+3)*imScale,1200,-100,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,(12+3)*imScale,(11+3)*imScale,1800,-160,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,(15+3)*imScale,(10+3)*imScale,1500,-130,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,(11+3)*imScale,(14+3)*imScale,1300,-110,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,(15+3)*imScale,26*imScale,1100,-380,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,(17+3)*imScale,31*imScale,1300,-480,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,(28-3)*imScale,27*imScale,850,-280,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,21*imScale,20*imScale,400,-10,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,27*imScale,(39-4)*imScale,500,-600,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,31*imScale,(42-4)*imScale,450,-700,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,37*imScale,(43-4)*imScale,250,-900,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,31*imScale,36*imScale,800,-1200,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,38*imScale,40*imScale,280,-800,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,(40-4)*imScale,33*imScale,700,-1000,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,33*imScale,(9+4)*imScale,-450,500,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,39*imScale,18*imScale,-400,550,forceType,'smallFA')+...,32/pixelSize
    assumedForceAniso2D(1,x,y,(43-4)*imScale,24*imScale,-350,400,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,38*imScale,12*imScale,-350,500,forceType,'smallFA')+...
    assumedForceAniso2D(1,x,y,(42-4)*imScale,17*imScale,-150,600,forceType,'smallFA'),...
    @(x,y) assumedForceAniso2D(2,x,y,(10+3)*imScale,(10+3)*imScale,1200,-100,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,(12+3)*imScale,(11+3)*imScale,1800,-160,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,(15+3)*imScale,(10+3)*imScale,1500,-130,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,(11+3)*imScale,(14+3)*imScale,1300,-110,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,(15+3)*imScale,26*imScale,1100,-380,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,(17+3)*imScale,31*imScale,1300,-480,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,(28-3)*imScale,27*imScale,850,-280,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,21*imScale,20*imScale,400,-10,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,27*imScale,(39-4)*imScale,500,-600,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,31*imScale,(42-4)*imScale,450,-700,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,37*imScale,(43-4)*imScale,250,-900,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,31*imScale,36*imScale,800,-1200,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,38*imScale,40*imScale,280,-800,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,(40-4)*imScale,33*imScale,700,-1000,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,33*imScale,(9+4)*imScale,-450,500,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,39*imScale,18*imScale,-400,550,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,(43-4)*imScale,24*imScale,-350,400,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,38*imScale,12*imScale,-350,500,forceType,'smallFA')+...
    assumedForceAniso2D(2,x,y,(42-4)*imScale,17*imScale,-150,600,forceType,'smallFA'),'fft_finite',[],meshPtsFwdSol,32/pixelSize); %,'conv',[],meshPtsFwdSol);

forceMeshFastBEM=createMeshAndBasisFastBEM(x_vec_d,y_vec_d,false,[],0);

L= 8.8e-8;
grid_mat_u(:,:,1)=x_mat_d; %dense
grid_mat_u(:,:,2)=y_mat_d; %dense
i_max = size(grid_mat_u,1);
j_max = size(grid_mat_u,2);
cluster_size = grid_mat_u(1,1,1) - grid_mat_u(2,2,1);
u_mat(:,:,1)=ux_d;
u_mat(:,:,2)=uy_d;

[~,~,force_FTTCfine, ~] = reg_fourier_TFM(grid_mat_u,u_mat,E,.5, 1, cluster_size, i_max, j_max, L);  
fttcL = L;
rec_force_FTTCregfine(:,:,1)=reshape(force_FTTCfine(:,1),i_max,j_max);
rec_force_FTTCregfine(:,:,2)=reshape(force_FTTCfine(:,2),i_max,j_max);

h3=figure; quiver(x_mat,y_mat,force_xmat/forceScale,force_ymat/forceScale,0,'b')
hold on
quiver(x_mat_d,y_mat_d,rec_force_FTTCregfine(:,:,1)/forceScale,rec_force_FTTCregfine(:,:,2)/forceScale,0,'r')


L = 1e-6;
display(['FastBEM with fine mesh (' num2str(L) ')...'])
[fx_FastBEMregfine,fy_FastBEMregfine,~,~,M_FastBEMfine,~,~,~,sol_mats_regfine]...
    = BEM_force_reconstruction(x_mat_d,y_mat_d,ux_d,uy_d,forceMeshFastBEM,...
    E,L,[],[],'fast',meshPtsFwdSol,...
    'backslash','basisClassTblPath','/files/.retain-snapshots.d7d-w0d/LCCB/fsm/harvard/analysis/Sangyoon/TFM Basis Function/basisClassTbl.mat');%,'fwdMap',M_FastBEMfine);
rec_force_FastBEMregfine(:,:,1)=fx_FastBEMregfine;
rec_force_FastBEMregfine(:,:,2)=fy_FastBEMregfine;

figure,quiver(x_vec_d,y_vec_d,fx_FastBEMregfine/forceScale,fy_FastBEMregfine/forceScale,0,'g');

