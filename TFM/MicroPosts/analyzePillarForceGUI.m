% CAL 7/16/03%% New Post Analysis using top and bottom images of posts clear;tic;warning off;close all;sum_fib=0;sum_ext_fib=0;sum_int_fib=0;% Set default values for flags used in final displaydef_flag=0;top_flag=0;bot_flag=0;post_top_flag=0;post_bot_flag=0;actin_flag=0;fn_flag=0;vinc_flag=0;repeat_flag=0;fn_plot_flag=0;vinc_plot_flag=0;actin2_flag=0;% Run setup screen for initial inputsgui_setup;top_factor=1;bot_factor=1;% set(title1,'String','Processing');% Read TIFF filesfile1=strcat(file,' Top.tif');file2=strcat(file,' Bottom.tif');actin_file=strcat(file,' Actin.tif');if fn_flag1 == 1';    fn_file=strcat(file,' FN.tif');endif vinc_flag1 == 1;    vinc_file=strcat(file,' Vinc.tif');end% Read actin image and determine cell outline:draw_actin;% Read in the top and bottom images and find centers:image_proc_top_w_NS_code4;% sort centroid grid into appropriate form:sort_grid_top;sort_grid_bot;% Subtract the top values from the bottom values to get displacements:difference_tb;% Separate posts into occupied posts, unoccupied posts, and degenerate posts:separate_posts_tb;% Convert grids to microns:convert_grids_tb;% Calculate magnitudes of vectors:calc_mags;% Calculate standard deviation of unoccupied posts:stdev_calc_tb;% Subtract mean of unoccupied post displacements from all displacements:correct_forces_tb;% Recalculate magnitudes and std dev following background subtraction:calc_mags;stdev_calc_tb;% calculate total force and force bias:force_analysis;% Assemble vectors into overlay image with actin and cell outline:if fn_flag1 == 1    draw_fn;    analyze_fn;endif vinc_flag1 == 1    draw_vinc;    analyze_vinc;endshow_actin_vectors;time=toc;% Run setup of final output screensend_gui_setup;% Save images and dataask_save=questdlg('Do you want to save?','Save?');if ask_save(1:1) == 'Y'   file_save=inputdlg('Save to Matlab File:','Save File Name',1,{file});   fname=strcat(file_save,'.mat');   fname2=mat2str(cell2mat(fname));%   clear f2_bot f_bot f_top f2_top background background_actin background_top background_bottom L L_actin fbi fbin centr fr_top fr_bot roi_actin y2_bot y2_top;   save(fname2);      fid=fopen('data_summary.txt','a');   fprintf(fid,'%s %s',[fname2 ';' pwd ';']);   fprintf(fid,'%9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f ; %9.4f \r',[stdev std_bot sum_net_force_mag sum_net_ext_force_mag sum_net_int_force_mag sum(cat(1,s_actin.Area))*convert^2 perim cell_num sum_total_force avg_post_force sum_total_force/(sum(cat(1,s_actin.Area))*convert^2) exterior_num sum_ext_force sum_ext_force/exterior_num interior_num sum_int_force sum_int_force/interior_num sum_fib*convert^2 sum_ext_fib*convert^2 sum_int_fib*convert^2]);   fclose(fid);end