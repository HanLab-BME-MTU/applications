function [ job ] = createJob( p, cluster , maxWorkers )
%timeCourseAnalysis.run.createJob Create a parallel.Job for
%timeCourseAnalysis
%
% See also timeCourseAnalysis.run.batch

    if(nargin < 2 || isempty(cluster))
        cluster = parcluster(p.batchmenu);
    end
    if(nargin < 3)
        maxWorkers = 24;
    end
    numWorkers = min(cluster.NumWorkers,maxWorkers);
    job = createCommunicatingJob( ...
        cluster, ...
        'Type','pool', ...
        'NumWorkersRange',[min(6,numWorkers) numWorkers], ...
        'AutoAttachFiles',false, ...
        'Name','Time Course Analysis', ...
        'Tag','UITimeCourseAnalysis' ...
        );
    createTask(job,@timeCourseAnalysis, ...
        0, ... % No output
        {p.CML_FullPath, p.outputDir, p}, ...
        'CaptureDiary', true ...
        );
    
    % Need to submit(job)
    % Get diary by job.Tasks(1).Diary

end

